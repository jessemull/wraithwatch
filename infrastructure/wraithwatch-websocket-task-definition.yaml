AWSTemplateFormatVersion: '2010-09-09'
Description: 'Wraithwatch WebSocket Server - ECS Task Definition'

Parameters:
  ContainerImage:
    Type: String
    Description: 'ECR image URI for the WebSocket server'
    Default: ''

  ECSClusterName:
    Type: String
    Description: 'Name of the ECS cluster'
    Default: 'wraithwatch-websocket-stack-Cluster'

  TargetGroupArn:
    Type: String
    Description: 'ARN of the ALB target group'
    Default: ''

Conditions:
  HasContainerImage: !Not [!Equals [!Ref ContainerImage, '']]
  HasTargetGroup: !Not [!Equals [!Ref TargetGroupArn, '']]

Resources:
  # Task Definition...

  WebSocketTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: 'wraithwatch-websocket-task'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: 256
      Memory: 512
      ExecutionRoleArn: !ImportValue 'wraithwatch-websocket-task-execution-role-arn'
      TaskRoleArn: !ImportValue 'wraithwatch-websocket-task-role-arn'
      ContainerDefinitions:
        - Name: websocket-server
          Image: !If
            - HasContainerImage
            - !Ref ContainerImage
            - !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/wraithwatch-websocket:latest'
          PortMappings:
            - ContainerPort: 8080
              Protocol: tcp
          Environment:
            - Name: NODE_ENV
              Value: 'main'
            - Name: PORT
              Value: '8080'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !ImportValue 'wraithwatch-websocket-log-group-name'
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: websocket

  # ECS Service (if target group is provided)...

  WebSocketService:
    Type: AWS::ECS::Service
    Condition: HasTargetGroup
    Properties:
      ServiceName: wraithwatch-websocket-service
      Cluster: !Ref ECSClusterName
      TaskDefinition: !Ref WebSocketTaskDefinition
      DesiredCount: 2
      LaunchType: FARGATE

      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !ImportValue wraithwatch-websocket-stack-WebSocketSecurityGroup
          Subnets:
            - !ImportValue wraithwatch-websocket-stack-PublicSubnet1
            - !ImportValue wraithwatch-websocket-stack-PublicSubnet2
      LoadBalancers:
        - ContainerName: websocket-server
          ContainerPort: 8080
          TargetGroupArn: !Ref TargetGroupArn

Outputs:
  TaskDefinitionArn:
    Description: 'ARN of the ECS task definition'
    Value: !Ref WebSocketTaskDefinition
    Export:
      Name: 'wraithwatch-websocket-task-definition'

  ServiceName:
    Description: 'Name of the ECS service'
    Value: !If
      - HasTargetGroup
      - !Ref WebSocketService
      - !Ref AWS::NoValue
    Export:
      Name: 'wraithwatch-websocket-service'
