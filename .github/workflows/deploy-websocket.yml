name: Deploy WebSocket Server

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - 'apps/realtime-api/**'
      - '.github/workflows/deploy-websocket.yml'

jobs:
  deploy-websocket:
    name: Deploy WebSocket Server to ECS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'yarn'

      - name: Install Dependencies
        run: |
          yarn install --frozen-lockfile

      - name: Lint Code
        run: |
          yarn lint

      - name: Run Tests
        run: |
          yarn workspace @wraithwatch/realtime-api test

      - name: Coverage Threshold Check
        run: |
          cd apps/realtime-api
          if [[ $(grep "Statements" coverage/lcov-report/index.html | awk '{print $4}' | tr -d '%') -lt 70 ]]; then
            echo "Code coverage is below threshold. Please update test coverage and try again."
            exit 1
          fi

      - name: Build TypeScript
        run: |
          yarn workspace @wraithwatch/realtime-api build

      - name: Set Up AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Log Into AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker Image
        run: |
          docker build -f apps/realtime-api/Dockerfile -t wraithwatch-websocket:$GITHUB_SHA .
          docker tag wraithwatch-websocket:$GITHUB_SHA ${{ steps.login-ecr.outputs.registry }}/wraithwatch-websocket:$GITHUB_SHA

      - name: Push Docker Image to ECR
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/wraithwatch-websocket:$GITHUB_SHA
          echo "CONTAINER_IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/wraithwatch-websocket:$GITHUB_SHA" >> $GITHUB_ENV

      - name: Deploy Task Definition
        run: |
          aws cloudformation deploy \
            --stack-name wraithwatch-websocket-task-definition \
            --template-file infrastructure/wraithwatch-websocket-task-definition.yaml \
            --parameter-overrides \
              ContainerImage=${{ env.CONTAINER_IMAGE_URI }} \
              ECSClusterName=wraithwatch-websocket-stack-Cluster \
              TargetGroupArn=arn:aws:elasticloadbalancing:us-east-1:771265364914:targetgroup/wraithwatch-ws-tg/22ba4b8ca4b693db \
            --capabilities CAPABILITY_NAMED_IAM \
            --region us-east-1
