name: Deploy Frontend

on:
  push:
    branches: [main]
    paths:
      - 'apps/frontend/**'
      - '.github/workflows/deploy-frontend.yml'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: apps/frontend/package-lock.json

      - name: Install Dependencies
        run: |
          cd apps/frontend
          npm ci

      - name: Build frontend
        run: |
          cd apps/frontend
          npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy to S3
        run: |
          # Get S3 bucket name from CloudFormation
          BUCKET_NAME=$(aws cloudformation describe-stacks \
            --stack-name wraithwatch-frontend \
            --query 'Stacks[0].Outputs[?OutputKey==`WebsiteBucketName`].OutputValue' \
            --output text)
            
          if [ "$BUCKET_NAME" == "None" ] || [ -z "$BUCKET_NAME" ]; then
            echo "Could not find S3 bucket. Make sure the CloudFormation stack is deployed."
            exit 1
          fi

          # Sync build output to S3
          aws s3 sync apps/frontend/out/ s3://$BUCKET_NAME/ --delete

      - name: Invalidate CloudFront cache
        run: |
          DISTRIBUTION_ID=$(aws cloudformation describe-stacks \
            --stack-name wraithwatch-frontend \
            --query 'Stacks[0].Outputs[?OutputKey==`CloudFrontDistributionId`].OutputValue' \
            --output text)
            
          if [ "$DISTRIBUTION_ID" != "None" ] && [ ! -z "$DISTRIBUTION_ID" ]; then
            aws cloudfront create-invalidation \
              --distribution-id $DISTRIBUTION_ID \
              --paths "/*"
          fi

      - name: Get Deployment URL
        run: |
          WEBSITE_URL=$(aws cloudformation describe-stacks \
            --stack-name wraithwatch-frontend \
            --query 'Stacks[0].Outputs[?OutputKey==`WebsiteURL`].OutputValue' \
            --output text)
          echo "Website deployed to: $WEBSITE_URL"
          echo "url=$WEBSITE_URL" >> $GITHUB_OUTPUT

      - name: Comment Deployment URL
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Frontend deployed successfully!\n\n **Website URL**: ${{ steps.deploy.outputs.url }}\n\n **Deployed at**: ${new Date().toISOString()}`
            })
        if: github.event_name == 'pull_request'
